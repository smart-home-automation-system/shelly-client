/*
 * Shelly - IoT devices
 * Shelly
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cloud.cholewa.shelly.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import jakarta.validation.constraints.*;
import java.util.Objects;

/**
 * EatonControl
 */
@JsonPropertyOrder({ EatonControl.JSON_PROPERTY_CONTROL })
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class EatonControl {
    /**
     * Gets or Sets control
     */
    public enum ControlEnum {
        SOX("5A"),

        EOX("A5");

        private String value;

        ControlEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ControlEnum fromValue(String value) {
            for (ControlEnum b : ControlEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_CONTROL = "control";
    private ControlEnum control;

    public EatonControl() {
    }

    public EatonControl control(ControlEnum control) {

        this.control = control;
        return this;
    }

    /**
     * Get control
     *
     * @return control
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_CONTROL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ControlEnum getControl() {
        return control;
    }

    @JsonProperty(JSON_PROPERTY_CONTROL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setControl(ControlEnum control) {
        this.control = control;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EatonControl eatonControl = (EatonControl) o;
        return Objects.equals(this.control, eatonControl.control);
    }

    @Override
    public int hashCode() {
        return Objects.hash(control);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EatonControl {\n");
        sb.append("    control: ").append(toIndentedString(control)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
